    Protocolo de comunicação
    Arquitetura cliente-servidor -> 
Cliente geralmente um navegador web envia Requisições a um servidor
Servidor geralmente uma maquina acessivel pela internet recebe a requisição a processa e envia de volta uma resposta para o cliente
    Caracteristicas do HTTP
Simples facil de entender e utilizar
Extensivel permite adicionar novas funcionalidades facilmente
Stateless ou sem estado (mas com sessão)
    Estrutura das mensagens
 Requisições -> 
Metodo -> define o tipo de operacao a ser realizada(Get,Post,Options,Head , etc)
Caminho -> O caminho do recurso a ser obtido, basicamente a URL do recurso sem a parte inicial(protocolo, dominio e porta)
Versão -> O protocolo HTTP possui diferentes versões com suas respectivas particularidades, logo e preciso definir a versão que se esta utilizando
Cabeçalho -> informações adicionais ente cliente e servidor
Corpo -> Conteudo da mensagem usando por exemplo ao enviar dados via POST  
 Resposta ->
 Codigo e mensagem de status -> Um codigo e uma breve descrição que indicam se a requisição foi bem sucedida ou não e o motivo
 Exemplos populares 200 sucesso 301 redirecionamento movido permanentemente , 404 não encontrado 500 erro interno do servidor
 Versão -> Versão do protocolo como nas Requisições
 Cabeçalho -> informações adicionais entre cliente e servidor comos nas Requisições
 Corpo -> Opcionalmente pode possuir um corpo , que e o conteudo da mensagem( como na pagina HTML ou documennto JSON)
    Exemplos            
Quando digitamos um endereço de um site no navegador estamos enviando uma requisição que recebra a resposta com um documennto HTML
Quando solicitamos informações a uma API Restfull enviamos uma requisição que recebra uma resposta contendo um documento JSON